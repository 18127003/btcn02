{"version":3,"sources":["component/Square.tsx","component/Board.tsx","component/Game.tsx","index.tsx"],"names":["Square","props","className","onClick","value","Board","renderSquare","i","squares","Game","status","useState","history","Array","fill","stepNumber","xIsNext","state","setState","calculateWinner","lines","length","a","b","c","current","winner","moves","map","step","move","desc","jumpTo","slice","handleClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LASeA,EARA,SAACC,GACZ,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,SC8BAC,EA/BoB,SAACJ,GAChC,IAAMK,EAAe,SAACC,GACpB,OACE,cAAC,EAAD,CACEH,MAASH,EAAMO,QAAQD,GACvBJ,QAAS,kBAAMF,EAAME,QAAQI,OAKnC,OACI,gCACE,sBAAKL,UAAU,YAAf,UACGI,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKJ,UAAU,YAAf,UACGI,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKJ,UAAU,YAAf,UACGI,EAAa,GACbA,EAAa,GACbA,EAAa,UCyEXG,EAlGS,WACpB,IA0EIC,EA1EJ,EAA0BC,mBAAS,CAC/BC,QAAS,CACP,CACEJ,QAASK,MAAM,GAAGC,KAAK,QAG3BC,WAAY,EACZC,SAAS,IAPb,mBAAOC,EAAP,KAAcC,EAAd,KAUMC,EAAkB,SAACX,GAWrB,IAVA,IAAMY,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CACrC,kBAAkBa,EAAMb,GAAxB,GAAOe,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIhB,EAAQc,IAAMd,EAAQc,KAAOd,EAAQe,IAAMf,EAAQc,KAAOd,EAAQgB,GACpE,OAAOhB,EAAQc,GAGnB,OAAO,MAgCLV,EAAUK,EAAML,QAChBa,EAAUb,EAAQK,EAAMF,YACxBW,EAASP,EAAgBM,EAAQjB,SAEjCmB,EAAQf,EAAQgB,KAAI,SAACC,EAAMC,GAC7B,IAAMC,EAAOD,EACT,eAAiBA,EACjB,mBACJ,OACI,6BACA,wBAAQ3B,QAAS,kBAlBV,SAAC0B,GACdX,EAAS,CACPN,QAASK,EAAML,QACfG,WAAYc,EACZb,QAAUa,EAAO,IAAO,IAcGG,CAAOF,IAA9B,SAAsCC,KAD7BD,MAajB,OALApB,EADIgB,EACK,WAAaA,EAEb,iBAAmBT,EAAMD,QAAU,IAAM,KAIlD,sBAAKd,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACA,cAAC,EAAD,CACIM,QAASiB,EAAQjB,QACjBL,QAAS,SAACI,GAAD,OAvDG,SAACA,GACnB,IAAMK,EAAUK,EAAML,QAAQqB,MAAM,EAAGhB,EAAMF,WAAa,GAEpDP,EADUI,EAAQA,EAAQS,OAAS,GACjBb,QAAQyB,QAC5Bd,EAAgBX,IAAYA,EAAQD,KAGxCC,EAAQD,GAAKU,EAAMD,QAAU,IAAM,IACnCE,EAAS,CACPN,QAAQ,GAAD,mBACAA,GADA,CAEH,CACIJ,QAASA,KAGjBO,WAAYH,EAAQS,OACpBL,SAAUC,EAAMD,WAuCWkB,CAAY3B,QAGvC,sBAAKL,UAAU,YAAf,UACA,8BAAMQ,IACN,6BAAKiB,WC1FbQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.54c46204.chunk.js","sourcesContent":["\r\nconst Square = (props: SquareProp) => {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\nexport default Square;","import Square from \"./Square\";\r\nimport React from \"react\";\r\n\r\nconst Board: React.FC<BoardProp> = (props) => {\r\n    const renderSquare = (i: number) =>  {\r\n      return (\r\n        <Square\r\n          value = {props.squares[i]}\r\n          onClick={() => props.onClick(i)}\r\n        />\r\n      );\r\n    }\r\n  \r\n    return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {renderSquare(0)}\r\n            {renderSquare(1)}\r\n            {renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {renderSquare(3)}\r\n            {renderSquare(4)}\r\n            {renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {renderSquare(6)}\r\n            {renderSquare(7)}\r\n            {renderSquare(8)}\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;\r\n  ","import React, { useState } from \"react\";\r\nimport Board from \"./Board\";\r\n\r\nconst Game : React.FC = () => {\r\n    const [state, setState] = useState({\r\n        history: [\r\n          {\r\n            squares: Array(9).fill(null)\r\n          }\r\n        ],\r\n        stepNumber: 0,\r\n        xIsNext: true\r\n    });\r\n\r\n    const calculateWinner = (squares:(string|null)[]) => {\r\n        const lines = [\r\n          [0, 1, 2],\r\n          [3, 4, 5],\r\n          [6, 7, 8],\r\n          [0, 3, 6],\r\n          [1, 4, 7],\r\n          [2, 5, 8],\r\n          [0, 4, 8],\r\n          [2, 4, 6]\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n          const [a, b, c] = lines[i];\r\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n          }\r\n        }\r\n        return null;\r\n    }\r\n      \r\n  \r\n    const handleClick = (i: number) => {\r\n      const history = state.history.slice(0, state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n      if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n      }\r\n      squares[i] = state.xIsNext ? \"X\" : \"O\";\r\n      setState({\r\n        history: [\r\n            ...history,\r\n            {\r\n                squares: squares\r\n            }\r\n        ],\r\n        stepNumber: history.length,\r\n        xIsNext: !state.xIsNext\r\n      });\r\n    }\r\n  \r\n    const jumpTo = (step: number) => {\r\n      setState({\r\n        history: state.history,\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0\r\n      });\r\n    }\r\n  \r\n    const history = state.history;\r\n    const current = history[state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n        const desc = move ?\r\n            'Go to move #' + move :\r\n            'Go to game start';\r\n        return (\r\n            <li key={move}>\r\n            <button onClick={() => jumpTo(move)}>{desc}</button>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n    status = \"Winner: \" + winner;\r\n    } else {\r\n    status = \"Next player: \" + (state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n    <div className=\"game\">\r\n        <div className=\"game-board\">\r\n        <Board\r\n            squares={current.squares}\r\n            onClick={(i:number) => handleClick(i)}\r\n        />\r\n        </div>\r\n        <div className=\"game-info\">\r\n        <div>{status}</div>\r\n        <ol>{moves}</ol>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './component/Game';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}